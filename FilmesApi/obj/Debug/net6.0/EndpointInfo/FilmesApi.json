{
  "openapi": "3.0.1",
  "info": {
    "title": "FilmesApi",
    "version": "v1"
  },
  "paths": {
    "/Cinema": {
      "post": {
        "tags": [
          "Cinema"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCinemaDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCinemaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCinemaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCinemaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Cinema"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCinemaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCinemaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCinemaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Cinema/{id}": {
      "get": {
        "tags": [
          "Cinema"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Cinema"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCinemaDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCinemaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCinemaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCinemaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Cinema"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "Endereco"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Endereco"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnderecoDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnderecoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnderecoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnderecoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Endereco"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Filme": {
      "post": {
        "tags": [
          "Filme"
        ],
        "summary": "Adiciona um filme à base de dados.",
        "requestBody": {
          "description": "DTO usado pelo mapper para efetivar as mudanças na base de dados",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilmeDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilmeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilmeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilmeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Em caso de inserção bem sucedida"
          }
        }
      },
      "get": {
        "tags": [
          "Filme"
        ],
        "summary": "Método que lista vários filmes da aplicação",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Quantos filmes iniciais serão desconsiderados",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Quantos filmes serão mostrados",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Em caso de leitura bem sucedida",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFilmeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFilmeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadFilmeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Filme/{id}": {
      "get": {
        "tags": [
          "Filme"
        ],
        "summary": "Método que retorna o primeiro filme encontrado, dado seu ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único para cada filme",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Em caso de leitura bem sucedida"
          }
        }
      },
      "put": {
        "tags": [
          "Filme"
        ],
        "summary": "Método que atualiza um filme, dado seu id, \r\ncom as informações do body da requisição",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do filme",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "DTO usado pelo mapper para efetivar as mudanças na base de dados",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilmeDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilmeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilmeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilmeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Em caso de atualização bem sucedida"
          }
        }
      },
      "patch": {
        "tags": [
          "Filme"
        ],
        "summary": "Método que atualiza parcialmente um filme, dado seu id, \r\ncom as informações do body da requisição",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do filme",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Em caso de atualização bem sucedida"
          }
        }
      },
      "delete": {
        "tags": [
          "Filme"
        ],
        "summary": "Método que deleta um filme da base de dados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do filme",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Em caso de atualização bem sucedida"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateCinemaDto": {
        "required": [
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateFilmeDto": {
        "required": [
          "duracao",
          "genero",
          "titulo"
        ],
        "type": "object",
        "properties": {
          "titulo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "genero": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "duracao": {
            "maximum": 600,
            "minimum": 50,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Operation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReadCinemaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadFilmeDto": {
        "type": "object",
        "properties": {
          "titulo": {
            "type": "string",
            "nullable": true
          },
          "genero": {
            "type": "string",
            "nullable": true
          },
          "duracao": {
            "type": "integer",
            "format": "int32"
          },
          "horaDaConsulta": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateCinemaDto": {
        "required": [
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateEnderecoDto": {
        "required": [
          "logradouro",
          "numero"
        ],
        "type": "object",
        "properties": {
          "logradouro": {
            "minLength": 1,
            "type": "string"
          },
          "numero": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateFilmeDto": {
        "required": [
          "duracao",
          "genero",
          "titulo"
        ],
        "type": "object",
        "properties": {
          "titulo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "genero": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "duracao": {
            "maximum": 600,
            "minimum": 50,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    }
  }
}